#include "lib/horus.dl"

.decl call_flow(a1:Address, a2:Address, p:Value)
call_flow(a1, a2, p) :-
  call(_, _, _, a1, a2, _, p, _, _).

call_flow(a1, a2, p) :-
  call(_, _, _, a1, a3, _, p, _, _),
  call_flow(a3, a2, _).

.decl influences_condition(step1:number)
influences_condition(step1) :-
  condition(step1, _).

influences_condition(step1) :-
  data_flow(step1, step2),
  condition(step2, _).

/* Reentrancy */
.decl Reentrancy(a1:Address, a2:Address, p1:Value, p2:Value)
Reentrancy(a1, a2, p1, p2) :-
  call_flow(a1, a2, p1),
  call_flow(a2, a1, p2),
  a1 != a2.
.output Reentrancy

/* Unhandled Exception */
.decl UnhandledException(step:number)
UnhandledException(step1) :-
  call(step1, _, _, _, _, _, _, _, 0),
  !influences_condition(step1).
.output UnhandledException
